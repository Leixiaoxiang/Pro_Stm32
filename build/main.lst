ARM GAS  /var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccxia6UM.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SystemClock_Config,"ax",%progbits
  20              		.align	2
  21              		.global	SystemClock_Config
  22              		.thumb
  23              		.thumb_func
  25              	SystemClock_Config:
  26              	.LFB66:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "adc.h"
  24:Src/main.c    **** #include "i2c.h"
  25:Src/main.c    **** #include "usart.h"
  26:Src/main.c    **** #include "gpio.h"
  27:Src/main.c    **** #include "oled_i2c.h"
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN Includes */
  31:Src/main.c    **** 
ARM GAS  /var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccxia6UM.s 			page 2


  32:Src/main.c    **** /* USER CODE END Includes */
  33:Src/main.c    **** 
  34:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PTD */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* USER CODE END PTD */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  40:Src/main.c    **** /* USER CODE BEGIN PD */
  41:Src/main.c    **** /* USER CODE END PD */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  44:Src/main.c    **** /* USER CODE BEGIN PM */
  45:Src/main.c    **** 
  46:Src/main.c    **** /* USER CODE END PM */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE BEGIN PV */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE END PV */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  55:Src/main.c    **** void SystemClock_Config(void);
  56:Src/main.c    **** /* USER CODE BEGIN PFP */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE END PFP */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  61:Src/main.c    **** /* USER CODE BEGIN 0 */
  62:Src/main.c    **** static uint8_t crc16_data[] = { 0x01, 0x04, 0x00, 0x00, 0x00, 0x0A, 0x70, 0x0d};
  63:Src/main.c    **** /* USER CODE END 0 */
  64:Src/main.c    **** 
  65:Src/main.c    **** /**
  66:Src/main.c    ****   * @brief  The application entry point.
  67:Src/main.c    ****   * @retval int
  68:Src/main.c    ****   */
  69:Src/main.c    **** int main(void)
  70:Src/main.c    **** {
  71:Src/main.c    ****   /* USER CODE BEGIN 1 */
  72:Src/main.c    ****   uint32_t adc1_val = 0x00;
  73:Src/main.c    ****   uint32_t adc2_val = 0x00;
  74:Src/main.c    ****   /* USER CODE END 1 */
  75:Src/main.c    **** 
  76:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  77:Src/main.c    **** 
  78:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  79:Src/main.c    ****   HAL_Init();
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* USER CODE BEGIN Init */
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* USER CODE END Init */
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* Configure the system clock */
  86:Src/main.c    ****   SystemClock_Config();
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* USER CODE BEGIN SysInit */
ARM GAS  /var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccxia6UM.s 			page 3


  89:Src/main.c    **** 
  90:Src/main.c    ****   /* USER CODE END SysInit */
  91:Src/main.c    **** 
  92:Src/main.c    ****   /* Initialize all configured peripherals */
  93:Src/main.c    ****   MX_GPIO_Init();
  94:Src/main.c    ****   MX_ADC1_Init();
  95:Src/main.c    ****   MX_ADC2_Init();
  96:Src/main.c    ****   MX_I2C1_Init();
  97:Src/main.c    ****   MX_I2C2_Init();
  98:Src/main.c    ****   MX_UART4_Init();
  99:Src/main.c    ****   MX_UART5_Init();
 100:Src/main.c    ****   /* USER CODE BEGIN 2 */
 101:Src/main.c    ****   OLED_Init();
 102:Src/main.c    ****   display_ctrl(&hi2c1,0,NULL);
 103:Src/main.c    ****   display_ctrl(&hi2c2,0,NULL);
 104:Src/main.c    ****   
 105:Src/main.c    ****   /* USER CODE END 2 */
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* Infinite loop */
 108:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 109:Src/main.c    ****   while (1)
 110:Src/main.c    ****   {
 111:Src/main.c    ****     /* USER CODE END WHILE */
 112:Src/main.c    ****     /* USER CODE BEGIN 3 */
 113:Src/main.c    ****     HAL_UART_Transmit(&huart4, crc16_data, 8, 100);
 114:Src/main.c    ****     adc1_val = MMX_ADC_Conversion(&hadc1);
 115:Src/main.c    ****     display_ctrl(&hi2c1,adc1_val,uart_data1);
 116:Src/main.c    **** 
 117:Src/main.c    ****     HAL_UART_Transmit(&huart5, crc16_data, 8, 100);
 118:Src/main.c    ****     adc2_val = MMX_ADC_Conversion(&hadc2);
 119:Src/main.c    ****     display_ctrl(&hi2c2,adc2_val,uart_data2);
 120:Src/main.c    ****     //HAL_Delay(1000);
 121:Src/main.c    ****   }
 122:Src/main.c    ****   /* USER CODE END 3 */
 123:Src/main.c    **** }
 124:Src/main.c    **** 
 125:Src/main.c    **** /**
 126:Src/main.c    ****   * @brief System Clock Configuration
 127:Src/main.c    ****   * @retval None
 128:Src/main.c    ****   */
 129:Src/main.c    **** void SystemClock_Config(void)
 130:Src/main.c    **** {
  28              		.loc 1 130 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 88
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 97B0     		sub	sp, sp, #92
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 104
 131:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  41              		.loc 1 131 0
ARM GAS  /var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccxia6UM.s 			page 4


  42 0004 2822     		movs	r2, #40
  43 0006 0021     		movs	r1, #0
  44 0008 0CA8     		add	r0, sp, #48
  45 000a FFF7FEFF 		bl	memset
  46              	.LVL0:
 132:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  47              		.loc 1 132 0
  48 000e 0024     		movs	r4, #0
  49 0010 0794     		str	r4, [sp, #28]
  50 0012 0894     		str	r4, [sp, #32]
  51 0014 0994     		str	r4, [sp, #36]
  52 0016 0A94     		str	r4, [sp, #40]
  53 0018 0B94     		str	r4, [sp, #44]
 133:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  54              		.loc 1 133 0
  55 001a 0194     		str	r4, [sp, #4]
  56 001c 0294     		str	r4, [sp, #8]
  57 001e 0394     		str	r4, [sp, #12]
  58 0020 0494     		str	r4, [sp, #16]
  59 0022 0594     		str	r4, [sp, #20]
  60 0024 0694     		str	r4, [sp, #24]
 134:Src/main.c    **** 
 135:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 136:Src/main.c    ****   */
 137:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  61              		.loc 1 137 0
  62 0026 0122     		movs	r2, #1
  63 0028 0C92     		str	r2, [sp, #48]
 138:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  64              		.loc 1 138 0
  65 002a 4FF48033 		mov	r3, #65536
  66 002e 0D93     		str	r3, [sp, #52]
 139:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 140:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  67              		.loc 1 140 0
  68 0030 1092     		str	r2, [sp, #64]
 141:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  69              		.loc 1 141 0
  70 0032 0225     		movs	r5, #2
  71 0034 1395     		str	r5, [sp, #76]
 142:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  72              		.loc 1 142 0
  73 0036 1493     		str	r3, [sp, #80]
 143:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
  74              		.loc 1 143 0
  75 0038 4FF4E013 		mov	r3, #1835008
  76 003c 1593     		str	r3, [sp, #84]
 144:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  77              		.loc 1 144 0
  78 003e 0CA8     		add	r0, sp, #48
  79 0040 FFF7FEFF 		bl	HAL_RCC_OscConfig
  80              	.LVL1:
 145:Src/main.c    ****   {
 146:Src/main.c    ****     Error_Handler();
 147:Src/main.c    ****   }
 148:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 149:Src/main.c    ****   */
ARM GAS  /var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccxia6UM.s 			page 5


 150:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
  81              		.loc 1 150 0
  82 0044 0F23     		movs	r3, #15
  83 0046 0793     		str	r3, [sp, #28]
 151:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 152:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  84              		.loc 1 152 0
  85 0048 0895     		str	r5, [sp, #32]
 153:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  86              		.loc 1 153 0
  87 004a 0994     		str	r4, [sp, #36]
 154:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
  88              		.loc 1 154 0
  89 004c 4FF48063 		mov	r3, #1024
  90 0050 0A93     		str	r3, [sp, #40]
 155:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
  91              		.loc 1 155 0
  92 0052 0B94     		str	r4, [sp, #44]
 156:Src/main.c    **** 
 157:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
  93              		.loc 1 157 0
  94 0054 2946     		mov	r1, r5
  95 0056 07A8     		add	r0, sp, #28
  96 0058 FFF7FEFF 		bl	HAL_RCC_ClockConfig
  97              	.LVL2:
 158:Src/main.c    ****   {
 159:Src/main.c    ****     Error_Handler();
 160:Src/main.c    ****   }
 161:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
  98              		.loc 1 161 0
  99 005c 0195     		str	r5, [sp, #4]
 162:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV8;
 100              		.loc 1 162 0
 101 005e 4FF44043 		mov	r3, #49152
 102 0062 0393     		str	r3, [sp, #12]
 163:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 103              		.loc 1 163 0
 104 0064 01A8     		add	r0, sp, #4
 105 0066 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 106              	.LVL3:
 164:Src/main.c    ****   {
 165:Src/main.c    ****     Error_Handler();
 166:Src/main.c    ****   }
 167:Src/main.c    **** }
 107              		.loc 1 167 0
 108 006a 17B0     		add	sp, sp, #92
 109              	.LCFI2:
 110              		.cfi_def_cfa_offset 12
 111              		@ sp needed
 112 006c 30BD     		pop	{r4, r5, pc}
 113              		.cfi_endproc
 114              	.LFE66:
 116 006e 00BF     		.section	.text.main,"ax",%progbits
 117              		.align	2
 118              		.global	main
 119              		.thumb
 120              		.thumb_func
ARM GAS  /var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccxia6UM.s 			page 6


 122              	main:
 123              	.LFB65:
  70:Src/main.c    ****   /* USER CODE BEGIN 1 */
 124              		.loc 1 70 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128 0000 10B5     		push	{r4, lr}
 129              	.LCFI3:
 130              		.cfi_def_cfa_offset 8
 131              		.cfi_offset 4, -8
 132              		.cfi_offset 14, -4
 133              	.LVL4:
  79:Src/main.c    **** 
 134              		.loc 1 79 0
 135 0002 FFF7FEFF 		bl	HAL_Init
 136              	.LVL5:
  86:Src/main.c    **** 
 137              		.loc 1 86 0
 138 0006 FFF7FEFF 		bl	SystemClock_Config
 139              	.LVL6:
  93:Src/main.c    ****   MX_ADC1_Init();
 140              		.loc 1 93 0
 141 000a FFF7FEFF 		bl	MX_GPIO_Init
 142              	.LVL7:
  94:Src/main.c    ****   MX_ADC2_Init();
 143              		.loc 1 94 0
 144 000e FFF7FEFF 		bl	MX_ADC1_Init
 145              	.LVL8:
  95:Src/main.c    ****   MX_I2C1_Init();
 146              		.loc 1 95 0
 147 0012 FFF7FEFF 		bl	MX_ADC2_Init
 148              	.LVL9:
  96:Src/main.c    ****   MX_I2C2_Init();
 149              		.loc 1 96 0
 150 0016 FFF7FEFF 		bl	MX_I2C1_Init
 151              	.LVL10:
  97:Src/main.c    ****   MX_UART4_Init();
 152              		.loc 1 97 0
 153 001a FFF7FEFF 		bl	MX_I2C2_Init
 154              	.LVL11:
  98:Src/main.c    ****   MX_UART5_Init();
 155              		.loc 1 98 0
 156 001e FFF7FEFF 		bl	MX_UART4_Init
 157              	.LVL12:
  99:Src/main.c    ****   /* USER CODE BEGIN 2 */
 158              		.loc 1 99 0
 159 0022 FFF7FEFF 		bl	MX_UART5_Init
 160              	.LVL13:
 101:Src/main.c    ****   display_ctrl(&hi2c1,0,NULL);
 161              		.loc 1 101 0
 162 0026 FFF7FEFF 		bl	OLED_Init
 163              	.LVL14:
 102:Src/main.c    ****   display_ctrl(&hi2c2,0,NULL);
 164              		.loc 1 102 0
 165 002a 0022     		movs	r2, #0
 166 002c 1146     		mov	r1, r2
ARM GAS  /var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccxia6UM.s 			page 7


 167 002e 1348     		ldr	r0, .L6
 168 0030 FFF7FEFF 		bl	display_ctrl
 169              	.LVL15:
 103:Src/main.c    ****   
 170              		.loc 1 103 0
 171 0034 0022     		movs	r2, #0
 172 0036 1146     		mov	r1, r2
 173 0038 1148     		ldr	r0, .L6+4
 174 003a FFF7FEFF 		bl	display_ctrl
 175              	.LVL16:
 176              	.L4:
 113:Src/main.c    ****     adc1_val = MMX_ADC_Conversion(&hadc1);
 177              		.loc 1 113 0 discriminator 1
 178 003e 114C     		ldr	r4, .L6+8
 179 0040 6423     		movs	r3, #100
 180 0042 0822     		movs	r2, #8
 181 0044 2146     		mov	r1, r4
 182 0046 1048     		ldr	r0, .L6+12
 183 0048 FFF7FEFF 		bl	HAL_UART_Transmit
 184              	.LVL17:
 114:Src/main.c    ****     display_ctrl(&hi2c1,adc1_val,uart_data1);
 185              		.loc 1 114 0 discriminator 1
 186 004c 0F48     		ldr	r0, .L6+16
 187 004e FFF7FEFF 		bl	MMX_ADC_Conversion
 188              	.LVL18:
 115:Src/main.c    **** 
 189              		.loc 1 115 0 discriminator 1
 190 0052 0F4A     		ldr	r2, .L6+20
 191 0054 0146     		mov	r1, r0
 192 0056 0948     		ldr	r0, .L6
 193              	.LVL19:
 194 0058 FFF7FEFF 		bl	display_ctrl
 195              	.LVL20:
 117:Src/main.c    ****     adc2_val = MMX_ADC_Conversion(&hadc2);
 196              		.loc 1 117 0 discriminator 1
 197 005c 6423     		movs	r3, #100
 198 005e 0822     		movs	r2, #8
 199 0060 2146     		mov	r1, r4
 200 0062 0C48     		ldr	r0, .L6+24
 201 0064 FFF7FEFF 		bl	HAL_UART_Transmit
 202              	.LVL21:
 118:Src/main.c    ****     display_ctrl(&hi2c2,adc2_val,uart_data2);
 203              		.loc 1 118 0 discriminator 1
 204 0068 0B48     		ldr	r0, .L6+28
 205 006a FFF7FEFF 		bl	MMX_ADC_Conversion
 206              	.LVL22:
 119:Src/main.c    ****     //HAL_Delay(1000);
 207              		.loc 1 119 0 discriminator 1
 208 006e 0B4A     		ldr	r2, .L6+32
 209 0070 0146     		mov	r1, r0
 210 0072 0348     		ldr	r0, .L6+4
 211              	.LVL23:
 212 0074 FFF7FEFF 		bl	display_ctrl
 213              	.LVL24:
 214 0078 E1E7     		b	.L4
 215              	.L7:
 216 007a 00BF     		.align	2
ARM GAS  /var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccxia6UM.s 			page 8


 217              	.L6:
 218 007c 00000000 		.word	hi2c1
 219 0080 00000000 		.word	hi2c2
 220 0084 00000000 		.word	.LANCHOR0
 221 0088 00000000 		.word	huart4
 222 008c 00000000 		.word	hadc1
 223 0090 00000000 		.word	uart_data1
 224 0094 00000000 		.word	huart5
 225 0098 00000000 		.word	hadc2
 226 009c 00000000 		.word	uart_data2
 227              		.cfi_endproc
 228              	.LFE65:
 230              		.section	.text.Error_Handler,"ax",%progbits
 231              		.align	2
 232              		.global	Error_Handler
 233              		.thumb
 234              		.thumb_func
 236              	Error_Handler:
 237              	.LFB67:
 168:Src/main.c    **** 
 169:Src/main.c    **** /* USER CODE BEGIN 4 */
 170:Src/main.c    **** 
 171:Src/main.c    **** /* USER CODE END 4 */
 172:Src/main.c    **** 
 173:Src/main.c    **** /**
 174:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 175:Src/main.c    ****   * @retval None
 176:Src/main.c    ****   */
 177:Src/main.c    **** void Error_Handler(void)
 178:Src/main.c    **** {
 238              		.loc 1 178 0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242              		@ link register save eliminated.
 243 0000 7047     		bx	lr
 244              		.cfi_endproc
 245              	.LFE67:
 247 0002 00BF     		.section	.data.crc16_data,"aw",%progbits
 248              		.align	2
 249              		.set	.LANCHOR0,. + 0
 252              	crc16_data:
 253 0000 01       		.byte	1
 254 0001 04       		.byte	4
 255 0002 00       		.byte	0
 256 0003 00       		.byte	0
 257 0004 00       		.byte	0
 258 0005 0A       		.byte	10
 259 0006 70       		.byte	112
 260 0007 0D       		.byte	13
 261              		.text
 262              	.Letext0:
 263              		.file 2 "/Users/leixiaoxiang/opt/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 264              		.file 3 "/Users/leixiaoxiang/opt/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 265              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 266              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 267              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
ARM GAS  /var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccxia6UM.s 			page 9


 268              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 269              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 270              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 271              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 272              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 273              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 274              		.file 13 "Drivers/CMSIS/Include/core_cm3.h"
 275              		.file 14 "Inc/adc.h"
 276              		.file 15 "Inc/i2c.h"
 277              		.file 16 "Inc/usart.h"
 278              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 279              		.file 18 "Inc/gpio.h"
 280              		.file 19 "Inc/oled_i2c.h"
ARM GAS  /var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccxia6UM.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccxia6UM.s:20     .text.SystemClock_Config:0000000000000000 $t
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccxia6UM.s:25     .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccxia6UM.s:117    .text.main:0000000000000000 $t
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccxia6UM.s:122    .text.main:0000000000000000 main
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccxia6UM.s:218    .text.main:000000000000007c $d
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccxia6UM.s:231    .text.Error_Handler:0000000000000000 $t
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccxia6UM.s:236    .text.Error_Handler:0000000000000000 Error_Handler
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccxia6UM.s:248    .data.crc16_data:0000000000000000 $d
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccxia6UM.s:252    .data.crc16_data:0000000000000000 crc16_data
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_GPIO_Init
MX_ADC1_Init
MX_ADC2_Init
MX_I2C1_Init
MX_I2C2_Init
MX_UART4_Init
MX_UART5_Init
OLED_Init
display_ctrl
HAL_UART_Transmit
MMX_ADC_Conversion
hi2c1
hi2c2
huart4
hadc1
uart_data1
huart5
hadc2
uart_data2
